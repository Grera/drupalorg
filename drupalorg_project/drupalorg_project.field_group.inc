<?php

/**
 * @file
 * Bulk export of field_group objects generated by Bulk export module.
 */

/**
 * Implements hook_field_group_info().
 */
function drupalorg_project_field_group_info() {
  $field_groups = array();

  $field_group = new stdClass();
  $field_group->disabled = FALSE; /* Edit this to true to make a default field_group disabled initially */
  $field_group->api_version = 1;
  $field_group->group_name = 'group_project_issues';
  $field_group->entity_type = 'node';
  $field_group->mode = 'form';
  $field_group->parent_name = '';
  $field_group->data = array(
    'label' => 'Issues',
    'weight' => '4',
    'children' => array(
      0 => 'field_project_has_issue_queue',
      1 => 'field_project_components',
    ),
    'format_type' => 'tab',
    'format_settings' => array(
      'formatter' => 'closed',
      'instance_settings' => array(
        'description' => '',
        'classes' => '',
        'required_fields' => 1,
      ),
    ),
  );

  foreach (drupalorg_project_project_types() as $bundle => $info) {
    $field_group = clone($field_group);
    $field_group->bundle = $bundle;
    $field_group->identifier = "group_project_issues|node|$bundle|form";
    $field_groups[$field_group->identifier] = $field_group;
  }

  $field_group = new stdClass();
  $field_group->disabled = FALSE; /* Edit this to true to make a default field_group disabled initially */
  $field_group->api_version = 1;
  $field_group->group_name = 'group_project_releases';
  $field_group->entity_type = 'node';
  $field_group->mode = 'form';
  $field_group->parent_name = '';
  $field_group->data = array(
    'label' => 'Releases',
    'weight' => '5',
    'children' => array(
      0 => 'field_project_has_releases',
      1 => 'field_release_version_format',
    ),
    'format_type' => 'tab',
    'format_settings' => array(
      'formatter' => 'closed',
      'instance_settings' => array(
        'description' => '',
        'classes' => '',
        'required_fields' => 1,
      ),
    ),
  );

  foreach (drupalorg_project_project_types() as $bundle => $info) {
    $field_group = clone($field_group);
    $field_group->bundle = $bundle;
    $field_group->identifier = "group_project_releases|node|$bundle|form";
    $field_groups[$field_group->identifier] = $field_group;
  }

  $field_group = new stdClass();
  $field_group->disabled = FALSE; /* Edit this to true to make a default field_group disabled initially */
  $field_group->api_version = 1;
  $field_group->group_name = 'group_project_resources';
  $field_group->entity_type = 'node';
  $field_group->mode = 'form';
  $field_group->parent_name = '';
  $field_group->data = array(
    'label' => 'Resources',
    'weight' => '6',
    'children' => array(
      0 => 'field_project_homepage',
      1 => 'field_project_changelog',
      2 => 'field_project_demo',
      3 => 'field_project_documentation',
      4 => 'field_project_screenshots',
      5 => 'field_project_license',
    ),
    'format_type' => 'tab',
    'format_settings' => array(
      'formatter' => 'closed',
      'instance_settings' => array(
        'description' => '',
        'classes' => '',
        'required_fields' => 1,
      ),
    ),
  );

  foreach (drupalorg_project_project_types() as $bundle => $info) {
    $field_group = clone($field_group);
    $field_group->bundle = $bundle;
    $field_group->identifier = "group_project_resources|node|$bundle|form";
    $field_groups[$field_group->identifier] = $field_group;
  }

  $field_group = new stdClass();
  $field_group->disabled = FALSE; /* Edit this to true to make a default field_group disabled initially */
  $field_group->api_version = 1;
  $field_group->group_name = 'group_project_classification';
  $field_group->entity_type = 'node';
  $field_group->mode = 'form';
  $field_group->parent_name = '';
  $field_group->data = array(
    'label' => 'Project classification',
    'weight' => '3',
    'children' => array(
      0 => 'taxonomy_vocabulary_44',
      1 => 'taxonomy_vocabulary_46',
    ),
    'format_type' => 'fieldset',
    'format_settings' => array(
      'formatter' => 'collapsible',
      'instance_settings' => array(
        'description' => '',
        'classes' => '',
        'required_fields' => 1,
      ),
    ),
  );

  foreach (drupalorg_project_project_types() as $bundle => $info) {
    if ($bundle == 'project_module') {
      continue;
    }
    $field_group = clone($field_group);
    $field_group->bundle = $bundle;
    $field_group->identifier = "group_project_classification|node|$bundle|form";
    $field_groups[$field_group->identifier] = $field_group;
  }
  // Special case for module projects, since we need to add another field.
  $bundle = 'project_module';
  $field_group = clone($field_group);
  $field_group->data['children'][2] = 'taxonomy_vocabulary_3';
  $field_group->bundle = $bundle;
  $field_group->identifier = "group_project_classification|node|$bundle|form";
  $field_groups[$field_group->identifier] = $field_group;


  // Field group for the Issue tags taxonomy vocab on issue nodes.
  $field_group = new stdClass();
  $field_group->disabled = FALSE; /* Edit this to true to make a default field_group disabled initially */
  $field_group->api_version = 1;
  $field_group->identifier = 'group_project_issue_tags|node|project_issue|form';
  $field_group->group_name = 'group_project_issue_tags';
  $field_group->entity_type = 'node';
  $field_group->bundle = 'project_issue';
  $field_group->mode = 'form';
  $field_group->parent_name = '';
  $field_group->data = array(
    'label' => 'Issue tags',
    'weight' => '20',
    'children' => array(
      0 => 'taxonomy_vocabulary_9',
    ),
    'format_type' => 'fieldset',
    'format_settings' => array(
      'formatter' => 'collapsed',
      'instance_settings' => array(
        'description' => '',
        'classes' => '',
        'required_fields' => 0,
      ),
    ),
  );
  $field_groups[$field_group->identifier] = $field_group;

  return $field_groups;
}
