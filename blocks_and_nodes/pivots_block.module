<?php

/**
 * @file
 * This file provides the pivots_blocks that generates module recommendations.
 *
 * Current limitations/issues:
 *   1. Recommendation data is stored externally on master-other.drupal.org database.
 *      The reason to use external database is to give flexibility to developers to tweak the algorithm.
 *   2. "More" is disabled temporarily to make the code clearer, will be added later if needed.
 *
 * This module was developed with support from the National Science
 * Foundatio under award IIS-0812042. Any opinions, findings, and conclusions
 * or recommendations expressed or embodied in this software are those of the
 * author(s) and do not necessarily reflect the views of the National Science
 * Foundation.
 */

define('PID_DOUBLE', 5008); // double pivot algorithm ID that displays related projects in different algorithms.
define('LIMIT_DOUBLE', 5);
define('LIMIT_MAX', 100); // maximum items to display in the block or on a page.

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function pivots_block_output() {
  // Skip the Drupal core project.
  if (($node = project_get_project_from_menu()) && ($node->nid != DRUPALORG_CORE_NID)) {

    //HACK: randomize algorithm rotation
    $_pivots_block_pid_double = PID_DOUBLE; // double pivot ID defaults to conversation pivots
    switch (rand(0, 1)) {
      case 0:
        $_pivots_block_pid_double = 5008; // conversation pivots
        break;
      case 1:
        $_pivots_block_pid_double = 5009; // solr10
        break;
    }

    $output = _pivots_block_content($node->nid, $_pivots_block_pid_double, t("Related projects"), LIMIT_DOUBLE);
    //$output .= _pivots_block_suggestbox($node->nid, $_pivots_block_pid_double);
    return $output;
  }
}

function _pivots_block_content($node_id, $pivot_id, $title, $limit) {
  $output = '';
  $ga_event = "$node_id";
  $items = _pivots_block_generate_items($node_id, $pivot_id, $limit);
  if (!empty($items)) {
    foreach ($items as $position => $item) {
      $items[$position] = l($item['title'], "node/{$item['nid']}", array('attributes' => array(
          "onClick" => "javascript:_gaq.push(['_trackEvent', 'PivotsClick_${pivot_id}', '${node_id}_{$item['nid']}']);",
          "rel" => "nofollow",
        )));
      $ga_event .= "_{$item['nid']}";
    }
    //$output = theme('item_list', $items, $title);
    $output = theme('item_list', array('items' => $items)); // hack: don't show title
  }
  drupal_add_js("$(document).ready(function() {
    _gaq.push(['_trackEvent', 'PivotsPageview_{$pivot_id}', '{$ga_event}']);
  });", array('type' => 'inline', 'scope' => 'footer'));
  return $output;
}

function _pivots_block_generate_items($node_id, $pivot_id, $limit) {
  if ($limit <= 0) {
    $limit = LIMIT_MAX;
  }

  db_set_active('pivots'); // NOTE: here we activate the pivots database.
  // if there's database failure, we just pretend nothing happens whatsoever. pivots_block returns nothing in this case.
  $matches = @db_query("SELECT DISTINCT dest_id FROM {pivots_match} WHERE pivot_id = :pivot_id AND src_id = :src_id
        AND dest_id< > :dest_id< ORDER BY score DESC", array(':pivot_id' => $pivot_id, ':src_id' => $node_id, ':dest_id<' => $node_id));
  db_set_active(); // NOTE: change back to use the default database

  $count = 0;
  $items = array();
  while (($match = @db_fetch_array($matches)) && $count < $limit) {
    $dest_id = $match['dest_id'];
    $result = db_query("SELECT title FROM {node} WHERE nid = :nid AND status = :status", array(':nid' => $dest_id, ':status' => 1));
    // there might be cases that the node was deleted, or set to unpublished between pivots database refresh
    // so here we only count the valid node.
    $title = $result->fetchField();
    if ($title) {
      $items[] = array(
        'nid' => $dest_id,
        'title' => $title,
        'pid' => $pivot_id,
      );
      $count++;
    }
  }
  return $items;
}

/*function _pivots_block_suggestbox($node_id, $pivot_id) {
  $form = array();
  $form['suggestion'] = array (
    '#type' => 'textfield',
    //'#description' => t("Please suggest related projects. Multiple suggestions require multiple submission."),
    '#size' => 20,
    '#maxlength' => 128,
    '#weight' => 0,
    '#id' => 'pivots_block_suggestbox',
  );
  $form['submit'] = array(
    '#type' => 'button',
    '#value' => t('Suggest project!'),
    '#weight' => 1,
    '#id' => 'pivots_block_suggestbutton'
  );

  drupal_add_js("
      $(document).ready(function() {
        $('#pivots_block_suggestbutton').click(function() {
          var pattern = /^http[:][/][/]drupal[.]org[/]project[/]\w+$/;
          var suggestion = $('#pivots_block_suggestbox').val();
          while (!suggestion.match(pattern)) {
            suggestion = prompt('Please suggest a related project using URLs such as http://drupal.org/project/cck. Thank you.');
            if (!suggestion) break;
          }
          if (suggestion) {
            alert('Thank you for suggesting a related project. All suggestions will be aggregated and updated to the results soon.');
            pageTracker._trackEvent('PivotsSuggest_${pivot_id}', '${node_id}_'+suggestion);
          }
        });
      });
    ", 'inline');

  return drupal_render_form('pivots_block_suggestbox', $form);
}*/

/**
 * Implements hook_block_info().
 */
function pivots_block_block_info() {
  return array(
    array(
      'info' => t('pivots_block: Recommendations'),
      'cache' => DRUPAL_CACHE_PER_PAGE,
      'pages' => 'project/*',
    ),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function pivots_block_block_view($delta) {
  $block['subject'] = t('Related projects');
  $block['content'] = pivots_block_output();
  return $block;
}
